<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <Files>
    <moreValueTypes.LUA Encoding="Ascii85">%}juP,b_IB;jL;7Zr#HgX1D3sLm8BjE-4K91J-s7N+?$kPD}UjNOEImbbtHqBrA54wlFAcPqB3O-H-1,UE)*8J8@t[,wF8a2L}]zAeDub3vM}sX;K4/@EsCm#zG}t2sAefo;*,J%C(*_)zCbS(O7*zxPX%p,,2-?Ft}#A%i,!02rj=F:.!t5.]-a:1=:)CVx)M2$drak720r-fyyumeMc{ZEaVxPV3]X6b2h@:+jS)}D]Y{oN-E!5V2g#QAeUBoj}/mVDC_[{(v2=$F^7s9]0kE:0})e)xBNsY!I_7,X@IV+XpCpX1JoCA3:=h#^t(#J16H@8IR:;vz+br{eL7RPU]C!K0RgGAg[iCzjspZ4CdTiX$kR16H]HLt6TvjIJS9ArX]SCz3%:)nrX0Jnn2*+M-A/G-VK{B+a,tDv4(D)NGnTWIXdinTA{_Wj%k%08YGtgWdEP3@ACU%3rf@7w[mLilXmPDE(j!]6#qwX!y4^PbtJR7l?@D?MS_V6rTQ1#BXb26h-nRAi1D{Y{Yo[kqG0M$Q6^O_dd;sB.B7%(3Wj+,fLUOO?1s!=cTAa?LaX?e1FGHmyjry+7[BFIbnmYM8sg?30wc[LUVFFB%B%UvaYYZyO47Ygy3uB$r*-Z+p4aTffHZ2o383/iu5XM0qSzWkjSUmL0enj6]bmK$y@vffs@zxIlueR-neeZDO93Gnbf,^v4=!G:F)j8BQVwRvyw+els?xk{IUq+rSUK8#Kzbg1uK}+FQl3^BiO{g.*Qpi.Zx$12^un?q[RdSvJZt0m,OG-?/b2$l/aI;j#G:_9kw:8qiMQ$IN;!CljW.R}jfArKg1@SvY,fZ3e#3q2Q8.#LvEwO,zg;c0@[#x7f9()7drMq6suX@6@CArn.*$^08ueBGPidGbB!shPHVl/skruNHI3+I#p$No%eV{51%m5=ZD8U7JM8CB5:,LCJ*c{sXW:vsDv00</moreValueTypes.LUA>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Form"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local edit = {};
local checkbox = {};
local button = {};
local label = {};

--Start of cheat forn
local form = createForm(false)
form.Height = 600
form.Width = 600
form.Caption = 'Geometry Dash Cheat Form'
form.BorderStyle = bsSingle
form.Position = poScreenCenter
form.PopupMode = 0

local pageControl = createPageControl(form)
pageControl.Align = alLeft
pageControl.Width = form.Width
pageControl.BorderSpacing.Top = 50
pageControl.BevelOuter = bvNone

local globalTab = pageControl.addTab()
globalTab.setCaption("Global")

local bypassTab = pageControl.addTab()
bypassTab.setCaption("Bypass")

local creatorTab = pageControl.addTab()
creatorTab.setCaption("Creator")

local playerTab = pageControl.addTab()
playerTab.setCaption("Player")

edit[1] = createEdit(globalTab) --Speedhack edit
edit[1].AnchorSideLeft.Control = globalTab
edit[1].AnchorSideTop.Control = globalTab
edit[1].Width = 70
edit[1].BorderSpacing.Left = 5
edit[1].BorderSpacing.Top = 25
edit[1].Text = speedhack_getSpeed()

label[1] = createLabel(globalTab) --Speedhack text
label[1].AnchorSideLeft.Control = globalTab
label[1].AnchorSideTop.Control = globalTab
label[1].BorderSpacing.Left = 5
label[1].BorderSpacing.Top = 5
label[1].Caption = 'Speedhack:'

button[1] = createButton(globalTab) --Speedhack button
button[1].AnchorSideLeft.Control = globalTab
button[1].AnchorSideTop.Control = globalTab
button[1].BorderSpacing.Left = 5
button[1].BorderSpacing.Top = 50
button[1].Caption = 'Set'

button[2] = createButton(creatorTab)
button[2].AnchorSideLeft.Control = creatorTab
button[2].AnchorSideTop.Control = creatorTab
button[2].BorderSpacing.Left = 490
button[2].Width = 100
button[2].BorderSpacing.Top = 5
button[2].Caption = 'Password'

button[3] = createButton(form)
button[3].AnchorSideLeft.Control = form
button[3].AnchorSideTop.Control = form
button[3].BorderSpacing.Left = 490
button[3].Width = 100
button[3].BorderSpacing.Top = 5
button[3].Caption = 'Re-attach'

button[4] = createButton(creatorTab)
button[4].AnchorSideLeft.Control = creatorTab
button[4].AnchorSideTop.Control = creatorTab
button[4].BorderSpacing.Left = 490
button[4].Width = 100
button[4].BorderSpacing.Top = 30
button[4].Caption = 'Rate Level'

button[5] = createButton(playerTab)
button[5].AnchorSideLeft.Control = playerTab
button[5].AnchorSideTop.Control = playerTab
button[5].BorderSpacing.Left = 490
button[5].Width = 100
button[5].BorderSpacing.Top = 5
button[5].Caption = 'Gamemode'

checkbox[1] = createCheckBox(globalTab) --Anti cheat checkbox
checkbox[1].AnchorSideLeft.Control = globalTab
checkbox[1].AnchorSideTop.Control = globalTab
checkbox[1].BorderSpacing.Left = 100
checkbox[1].BorderSpacing.Top = 5
checkbox[1].Caption = 'Disable Anticheat'
checkbox[1].ShowHint = true
checkbox[1].Hint = 'Disables entire anticheat'

checkbox[2] = createCheckBox(playerTab) --Force trail state checkbox
checkbox[2].AllowGrayed = true
checkbox[2].AnchorSideLeft.Control = playerTab
checkbox[2].AnchorSideTop.Control = playerTab
checkbox[2].BorderSpacing.Left = 5
checkbox[2].BorderSpacing.Top = 5
checkbox[2].Caption = 'Force Trail State'
checkbox[2].ShowHint = true
checkbox[2].Hint = 'Sets the trail to either always on or always off'

checkbox[3] = createCheckBox(playerTab) --Practice music hack
checkbox[3].AnchorSideLeft.Control = playerTab
checkbox[3].AnchorSideTop.Control = playerTab
checkbox[3].BorderSpacing.Left = 5
checkbox[3].BorderSpacing.Top = 20
checkbox[3].Caption = 'Practice Music Hack'
checkbox[3].ShowHint = true
checkbox[3].Hint = "Plays the level's song in-sync with your position, instead of the standard practice song"

checkbox[4] = createCheckBox(playerTab) --Hide Attempts
checkbox[4].AnchorSideLeft.Control = playerTab
checkbox[4].AnchorSideTop.Control = playerTab
checkbox[4].BorderSpacing.Left = 5
checkbox[4].BorderSpacing.Top = 35
checkbox[4].Caption = 'Hide Attempts'
checkbox[4].ShowHint = true
checkbox[4].Hint = 'Hides the attempt count in-game'

checkbox[5] = createCheckBox(globalTab) --No Rotation
checkbox[5].AnchorSideLeft.Control = globalTab
checkbox[5].AnchorSideTop.Control = globalTab
checkbox[5].BorderSpacing.Left = 100
checkbox[5].BorderSpacing.Top = 20
checkbox[5].Caption = 'No Rotation'
checkbox[5].ShowHint = true
checkbox[5].Hint = 'Locks all rotation at 0 degrees'

checkbox[6] = createCheckBox(playerTab) --NoClip
checkbox[6].AnchorSideLeft.Control = playerTab
checkbox[6].AnchorSideTop.Control = playerTab
checkbox[6].BorderSpacing.Left = 5
checkbox[6].BorderSpacing.Top = 50
checkbox[6].Caption = 'NoClip'
checkbox[6].ShowHint = true
checkbox[6].Hint = 'Makes the player invincible'

checkbox[7] = createCheckBox(playerTab) --Accurate Percentage
checkbox[7].AnchorSideLeft.Control = playerTab
checkbox[7].AnchorSideTop.Control = playerTab
checkbox[7].BorderSpacing.Left = 5
checkbox[7].BorderSpacing.Top = 65
checkbox[7].Caption = 'Accurate Percentage'
checkbox[7].ShowHint = true
checkbox[7].Hint = 'Allows for decimals in the level percentage'

checkbox[8] = createCheckBox(bypassTab) --Unlock all icons
checkbox[8].AnchorSideLeft.Control = bypassTab
checkbox[8].AnchorSideTop.Control = bypassTab
checkbox[8].BorderSpacing.Left = 5
checkbox[8].BorderSpacing.Top = 5
checkbox[8].Caption = 'Icons'
checkbox[8].ShowHint = true
checkbox[8].Hint = 'Unlock all icons'

checkbox[9] = createCheckBox(playerTab) --Ignore escape key
checkbox[9].AnchorSideLeft.Control = playerTab
checkbox[9].AnchorSideTop.Control = playerTab
checkbox[9].BorderSpacing.Left = 5
checkbox[9].BorderSpacing.Top = 80
checkbox[9].Caption = 'Ignore ESC'
checkbox[9].ShowHint = true
checkbox[9].Hint = 'Stops the ESC key from exiting a level'

checkbox[10] = createCheckBox(playerTab) --no pulse
checkbox[10].AnchorSideLeft.Control = playerTab
checkbox[10].AnchorSideTop.Control = playerTab
checkbox[10].BorderSpacing.Left = 5
checkbox[10].BorderSpacing.Top = 95
checkbox[10].Caption = 'No Pulse'
checkbox[10].ShowHint = true
checkbox[10].Hint = 'Disables pulsing on objects'

checkbox[11] = createCheckBox(playerTab) --Inverse trail
checkbox[11].AnchorSideLeft.Control = playerTab
checkbox[11].AnchorSideTop.Control = playerTab
checkbox[11].BorderSpacing.Left = 5
checkbox[11].BorderSpacing.Top = 110
checkbox[11].Caption = 'Inverse Trail'
checkbox[11].ShowHint = true
checkbox[11].Hint = 'Inverses the trail state'

checkbox[12] = createCheckBox(creatorTab) --CopyHack
checkbox[12].AnchorSideLeft.Control = creatorTab
checkbox[12].AnchorSideTop.Control = creatorTab
checkbox[12].BorderSpacing.Left = 5
checkbox[12].BorderSpacing.Top = 5
checkbox[12].Caption = 'Copy Hack'
checkbox[12].ShowHint = true
checkbox[12].Hint = 'Lets you copy any level, without a password'

checkbox[13] = createCheckBox(globalTab) --Force visibility
checkbox[13].AnchorSideLeft.Control = globalTab
checkbox[13].AnchorSideTop.Control = globalTab
checkbox[13].BorderSpacing.Left = 100
checkbox[13].BorderSpacing.Top = 35
checkbox[13].Caption = 'Force Visibility'
checkbox[13].ShowHint = true
checkbox[13].Hint = 'Sets all nodes to be visible'

checkbox[14] = createCheckBox(playerTab) --Instant Complete
checkbox[14].AnchorSideLeft.Control = playerTab
checkbox[14].AnchorSideTop.Control = playerTab
checkbox[14].BorderSpacing.Left = 5
checkbox[14].BorderSpacing.Top = 125
checkbox[14].Caption = 'Instant Complete'
checkbox[14].ShowHint = true
checkbox[14].Hint = 'Teleports the player to the end of a level, also know as the teleport hack'

checkbox[15] = createCheckBox(bypassTab) --Free Shop Items
checkbox[15].AnchorSideLeft.Control = bypassTab
checkbox[15].AnchorSideTop.Control = bypassTab
checkbox[15].BorderSpacing.Left = 5
checkbox[15].BorderSpacing.Top = 20
checkbox[15].Caption = 'Free Shop Items'
checkbox[15].ShowHint = true
checkbox[15].Hint = 'Allows all shop items to be bought for 0 mana orbs'

checkbox[16] = createCheckBox(bypassTab) --Character Filter
checkbox[16].AnchorSideLeft.Control = bypassTab
checkbox[16].AnchorSideTop.Control = bypassTab
checkbox[16].BorderSpacing.Left = 5
checkbox[16].BorderSpacing.Top = 35
checkbox[16].Caption = 'Character Filter'
checkbox[16].ShowHint = true
checkbox[16].Hint = 'Lets you input any character in all text inputs'

checkbox[17] = createCheckBox(bypassTab) --Text Length
checkbox[17].AnchorSideLeft.Control = bypassTab
checkbox[17].AnchorSideTop.Control = bypassTab
checkbox[17].BorderSpacing.Left = 5
checkbox[17].BorderSpacing.Top = 50
checkbox[17].Caption = 'Text Length'
checkbox[17].ShowHint = true
checkbox[17].Hint = 'Allows for unlimited text length in text inputs'

checkbox[18] = createCheckBox(bypassTab) --song bypass
checkbox[18].AnchorSideLeft.Control = bypassTab
checkbox[18].AnchorSideTop.Control = bypassTab
checkbox[18].BorderSpacing.Left = 5
checkbox[18].BorderSpacing.Top = 65
checkbox[18].Caption = 'Song Bypass'
checkbox[18].ShowHint = true
checkbox[18].Hint = 'Allows the downloading of banned songs'

checkbox[19] = createCheckBox(creatorTab)
checkbox[19].AnchorSideLeft.Control = creatorTab
checkbox[19].AnchorSideTop.Control = creatorTab
checkbox[19].BorderSpacing.Left = 5
checkbox[19].BorderSpacing.Top = 20
checkbox[19].Caption = 'Level Edit'
checkbox[19].ShowHint = true
checkbox[19].Hint = 'Lets you to edit any level'

button[1].OnClick = function(sender)
  if not IsAttached() then
    return
  end

  local speedHack = tonumber(edit[1].text)

  speedHack = math.max(0.1,math.min(speedHack,5.0))

  speedhack_setSpeed(speedHack)
end

button[2].OnClick = function(sender)
  if not IsAttached() then
    return
  end

  if readPointer("[[GeometryDash.exe+0x03222D0]+164]") == nil or readPointer("[[GeometryDash.exe+0x03222D0]+164]") == 0 then
    messageDialog("Enter the level to get password!",mtWarning,mbOK)
    return
  end

  local addr = getAddress("[[[GeometryDash.exe+0x03222D0]+164]+488]+2c4")

  local pswd = readInteger(addr) - readInteger(addr+0x4)

  if pswd == 0 then
    messageDialog("Level not copyable!",mtWarning,mbOK)
  elseif pswd == 1 then
    messageDialog("Level is copyable w/o password",mtInformation,mbOK)
  else
    messageDialog("Level password is: "..string.sub(pswd,2,7),mtInformation,mbOK)
  end
end

button[3].OnClick = function(sender)
  local stat = {
    ATTACH_PROCESS_NOT_DETECTED = 0,
    ATTACH_PROCESS_DETECTED = 1,
    ATTACH_PROCESS_ATTACHED = 2,
  }

  local status = GetProcessStatus('GeometryDash.exe')

  if status == stat.ATTACH_PROCESS_ATTACHED then
    messageDialog("Already attached to the game!",mtWarning,mbOK)
    return
  end

  if status == stat.ATTACH_PROCESS_DETECTED or status == stat.ATTACH_PROCESS_NOT_DETECTED then
    for i = 1,#checkbox do
      checkbox[i].Checked = false
    end
  end

  local attached = Attach()
  messageDialog(attached and 'Successfully attached!' or 'Failed to attach to the process!', attached and mtInformation or mtWarning, mbOK)
end

button[4].OnClick = function(sender)
  local diffs = {[0] = "N/A", "Easy", "Normal", "Hard", "Harder", "Insane", "Demon", "Easy Demon", "Medium Demon", "Insane Demon", "Extreme Demon"}
  local diff = messageComboBox('Rate Level: Choose Difficulty', diffs) * 10
  local stars = tonumber(inputQuery('Rate Level', 'Enter new star count', 0))

  if diff == nil or stars == nil then
    return
  end

  if readPointer('[[GeometryDash.exe+0x3222D0]+0x164]') == nil or readPointer('[[GeometryDash.exe+0x3222D0]+0x164]') == 0 then
    messageDialog('Failed to write memory, are you in level?', mtWarning, mbOK)
    return
  end

  local addr = getAddress('[[[[GeometryDash.exe+0x3222D0]+0x164]+0x22C]+0x114]')

  writeInteger(addr + 0x2A4, stars)
  writeInteger(addr + 0x2A8, 0)
  writeInteger(addr + 0x1E4, diff)
end

button[5].OnClick = function(sender)
  local gamemode = {[0] = "Cube", "Ship", "UFO", "Ball", "Wave", "Robot", "Spider"}

  local gamemodeIndex = messageComboBox('Select gamemode', gamemode)

  if PlayerObject:Get() == nil or PlayerObject:Get() == 0 then return end

  if gamemodeIndex == nil then return end

  local addr = getAddress("PlayerObject:Get()+0x638")

  writeBytes(addr, 0, 0, 0, 0, 0, 0)

  if gamemodeIndex then
    writeBool(addr + gamemodeIndex - 1,true)
  end
end

form.OnClose = function(sender)
  return caFree
end

checkbox[1].OnChange = function(sender)
  toggleAnticheat(not sender.Checked)
end

checkbox[2].OnChange = function(sender)
  if sender.State == 0 then
    forceTrailState(false)
  elseif sender.State == 1 then
    forceTrailState(true)
  elseif sender.State == 2 then
    forceTrailState(2)
  end
end

checkbox[3].OnChange = function(sender)
  practiceMusicHack(sender.Checked)
end

checkbox[4].OnChange = function(sender)
  hideAttempts(sender.Checked)
end

checkbox[5].OnChange = function(sender)
  noRotation(sender.Checked)
end

checkbox[6].OnChange = function(sender)
  noClip(sender.Checked)
end

checkbox[7].OnChange = function(sender)
  accuratePercentage(sender.Checked)
end

checkbox[8].OnChange = function(sender)
  iconBypass(sender.Checked)
end

checkbox[9].OnChange = function(sender)
  ignoreEsc(sender.Checked)
end

checkbox[10].OnChange = function(sender)
  noPulse(sender.Checked)
end

checkbox[11].OnChange = function(sender)
  inverseTrail(sender.Checked)
end

checkbox[12].OnChange = function(sender)
  copyHack(sender.Checked)
end

checkbox[13].OnChange = function(sender)
  forceVisibility(sender.Checked)
end

checkbox[14].OnChange = function(sender)
  instantComplete(sender.Checked)
end

checkbox[15].OnChange = function(sender)
  freeShopItems(sender.Checked)
end

checkbox[16].OnChange = function(sender)
  characterFilter(sender.Checked)
end

checkbox[17].OnChange = function(sender)
  textLength(sender.Checked)
end

checkbox[18].OnChange = function(sender)
  songBypass(sender.Checked)
end

checkbox[19].OnChange = function(sender)
  levelEdit(sender.Checked)
end

form.show()

{$asm}
test al,al

[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"PlayerObject"</Description>
      <Options moHideChildren="1"/>
      <ShowAsSigned>0</ShowAsSigned>
      <GroupHeader>1</GroupHeader>
      <Address>PlayerObject:Get()</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"x"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>+0x67C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"y"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>+0x680</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Speed"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>+648</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"No description"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>+63E</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"PlayLayer"</Description>
      <Options moHideChildren="1"/>
      <ShowAsSigned>0</ShowAsSigned>
      <GroupHeader>1</GroupHeader>
      <Address>Player:Get()</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Attempt"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>+0x4A8</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Likes"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>[[[[GeometryDash.exe+0x3222D0]+0x164]+0x22C]+0x114]+270</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Downloads"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>[[[[GeometryDash.exe+0x3222D0]+0x164]+0x22C]+0x114]+1E8</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>And don't tell me that i'm copying from mega hack v5 or v6, i know it
</Comments>
  <LuaScript>findTableFile('moreValueTypes.LUA').saveToFile()
require 'moreValueTypes'

Player = {}
PlayerObject = {}

function IsAttachedTo(procName)
  local stat = {
    ATTACH_PROCESS_NOT_DETECTED = 0,
    ATTACH_PROCESS_DETECTED = 1,
    ATTACH_PROCESS_ATTACHED = 2,
  }

  local status = GetProcessStatus(procName)

  return status == stat.ATTACH_PROCESS_ATTACHED
end

function IsAttached()
  return IsAttachedTo("GeometryDash.exe")
end

function GetProcessStatus(procName)
  local stat = {
    ATTACH_PROCESS_NOT_DETECTED = 0,
    ATTACH_PROCESS_DETECTED = 1,
    ATTACH_PROCESS_ATTACHED = 2,
  }
  if getProcessIDFromProcessName(procName) == getOpenedProcessID() then
    return stat.ATTACH_PROCESS_ATTACHED
  elseif getProcessIDFromProcessName(procName) == 0 or getProcessIDFromProcessName(procName) == nil then
    return stat.ATTACH_PROCESS_NOT_DETECTED
  elseif getProcessIDFromProcessName(procName) ~= 0 then
    return stat.ATTACH_PROCESS_DETECTED
  end
end

function AttachTo(procName)
  local stat = {
    ATTACH_PROCESS_NOT_DETECTED = 0,
    ATTACH_PROCESS_DETECTED = 1,
    ATTACH_PROCESS_ATTACHED = 2,
  }

  local status = GetProcessStatus(procName)

  if status == stat.ATTACH_PROCESS_NOT_DETECTED then
    return false
  elseif status == stat.ATTACH_PROCESS_ATTACHED then
    return true
  elseif status == stat.ATTACH_PROCESS_DETECTED then
    openProcess(procName)
    return true
  end
end

function Attach()
  return AttachTo('GeometryDash.exe')
end

function messageComboBox( name, items)
  if type(items) ~= 'table' or items == nil then
    return
  end

  local form = createForm(false)
  form.Width = 400
  form.Height = 55
  form.BorderStyle = bsSingle
  form.Position = poScreenCenter
  form.PopupMode = 0
  form.Caption = name or 'Select Item'

  local combobox = createComboBox(form)
  combobox.Width = form.Width - 20
  combobox.AnchorSideLeft.Control = form
  combobox.AnchorSideTop.Control = form
  combobox.BorderSpacing.Left = 10
  combobox.BorderSpacing.Top = 5

  local button = createButton(form)
  button.Width = 80
  button.AnchorSideLeft.Control = form
  button.AnchorSideTop.Control = form
  button.BorderSpacing.Left = form.Width / 2.5 - 40
  button.BorderSpacing.Top = 30
  button.Caption = 'OK'

  local button1 = createButton(form)
  button1.Width = 80
  button1.AnchorSideLeft.Control = form
  button1.AnchorSideTop.Control = form
  button1.BorderSpacing.Left = button.BorderSpacing.Left + 80
  button1.BorderSpacing.Top = 30
  button1.Caption = 'Cancel'

  for i = items[0] == nil and 1 or 0,#items do
    combobox.items.add(tostring(items[i]))
  end

  form.OnClose = function(sender)
    if combobox.ItemIndex == -1 and not button1.Pressed then
      messageDialog("Item can't be empty!\nPlease select item from box!",mtWarning,mbOK)
      return
    end
    if button.Pressed or button1.Pressed then
      return caFree
    end
  end

  button.OnClick = function(sender)
    button.Pressed = true
    form.Close()
  end

  button1.OnClick = function(sender)
    button1.Pressed = true
    form.Close()
  end

  form.showModal()

  return combobox.ItemIndex &gt;= 0 and combobox.ItemIndex or nil
end

function toggleAnticheat(toggle)
if not toggle then
local s = [[
GeometryDash.exe+202AAA:
db EB 2E

GeometryDash.exe+15FC2E:
db EB

GeometryDash.exe+1FD557:
db EB 0C

GeometryDash.exe+1FD742:
db C7 87 E0 02 00 00 01 00 00 00 C7 87 E4 02 00 00 00 00 00 00 90 90 90 90 90 90

GeometryDash.exe+1FD756:
db 90 90 90 90 90 90

GeometryDash.exe+1FD79A:
db 90 90 90 90 90 90

GeometryDash.exe+1FD7AF:
db 90 90 90 90 90 90

GeometryDash.exe+20D3B3:
db 90 90 90 90 90

GeometryDash.exe+1FF7A2:
db 90 90

GeometryDash.exe+18B2B4:
db B0 01

GeometryDash.exe+20C4E6:
db E9 D7 00 00 00 90
]]
autoAssemble(s)
end
if toggle then
local s = [[
GeometryDash.exe+202AAA:
db 74 2E

GeometryDash.exe+15FC2E:
db 74

GeometryDash.exe+1FD557:
db 74 0C

GeometryDash.exe+1FD742:
db 80 BF DD 02 00 00 00 0F 85 0A FE FF FF 80 BF 34 05 00 00 00 0F 84 FD FD FF FF

GeometryDash.exe+1FD756:
db 0F 84 FD FD FF FF

GeometryDash.exe+1FD79A:
db 0F 84 B9 FD FF FF

GeometryDash.exe+1FD7AF:
db 0F 84 A4 FD FF FF

GeometryDash.exe+20D3B3:
db E8 58 04 00 00

GeometryDash.exe+1FF7A2:
db 74 6E

GeometryDash.exe+18B2B4:
db 88 D8

GeometryDash.exe+20C4E6:
db 0F 85 D6 00 00 00
]]
autoAssemble(s)
end
end

function noRotation(toggle)
if toggle then
local s = [[
libcocos2d.dll+60554:
db 90 90 90 90 90 90 90 90 90 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
libcocos2d.dll+60554:
db F3 0F 11 49 24 F3 0F 11 49 20
]]
autoAssemble(s)
end
end

function noClip(toggle)
if toggle then
local s = [[
GeometryDash.exe+20A23C:
db E9 79 06 00 00
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+20A23C:
db 6A 14 8B CB FF
]]
autoAssemble(s)
end
end

function forceTrailState(toggle)
if toggle then
local s = [[
libcocos2d.dll+AEDCC:
db 90 90 90 90 90 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
libcocos2d.dll+AEDCC:
db 0F 84 68 02 00 00
]]
autoAssemble(s)
end
if toggle == 2 then
local s = [[
libcocos2d.dll+AEDCC:
db E9 69 02 00 00 90
]]
autoAssemble(s)
end
end

function practiceMusicHack(toggle)
if toggle then
local s = [[
GeometryDash.exe+20C925:
db 90 90 90 90 90 90
GeometryDash.exe+20D143:
db 90 90
GeometryDash.exe+20A563:
db 90 90
GeometryDash.exe+20A595:
db 90 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+20C925:
db 0F 85 F7 00 00 00
GeometryDash.exe+20D143:
db 75 41
GeometryDash.exe+20A563:
db 75 3E
GeometryDash.exe+20A595:
db 75 0C
]]
autoAssemble(s)
end
end

function hideAttempts(toggle)
if toggle then
local s = [[
GeometryDash.exe+2D83B8:
db 00
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+2D83B8:
db 41
]]
autoAssemble(s)
end
end

function accuratePercentage(toggle)
if toggle then
local s = [[
GeometryDash.exe+208114:
db C7 02 25 66 25 25 8B 87 C0 03 00 00 8B B0 04 01 00 00 F3 0F 5A C0 83 EC 08 F2 0F 11 04 24 83 EC 04 89 14 24 90
GeometryDash.exe+20813F:
db 83 C4 0C
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+208114:
db F3 0F 2C C0 85 C0 0F 4F C8 B8 64 00 00 00 3B C8 0F 4F C8 8B 87 C0 03 00 00 51 68 30 32 9A 00 8B B0 04 01 00 00
GeometryDash.exe+20813F:
db 83 C4 08
]]
autoAssemble(s)
end
end

function iconBypass(toggle)
if toggle then
local s = [[
GeometryDash.exe+C50A8:
db B0 01 90 90 90
GeometryDash.exe+C54BA:
db B0 01 90 90 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+C50A8:
db E8 7A CD 19 00
GeometryDash.exe+C54BA:
db E8 68 C9 19 00
]]
autoAssemble(s)
end
end

function ignoreEsc(toggle)
if toggle then
local s = [[
GeometryDash.exe+1E644C:
db 90 90 90 90 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+1E644C:
db E8 BF 73 02 00
]]
autoAssemble(s)
end
end

function cod3breakerCalc(a,b,c,d,e,f)
local num = b - a
local num2 = c - b
local num3 = d - c
local num4 = e - d
local num5 = f - e
return num..num2..num3..num4..num5
end

function noPulse(toggle)
if toggle then
local s = [[
GeometryDash.exe+2060D9:
db EB 4A
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+2060D9:
db 74 4A
]]
autoAssemble(s)
end
end

function inverseTrail(toggle)
if toggle then
local s = [[
libcocos2d.dll+AEDCC:
db 0F 85 68 02 00 00
]]
autoAssemble(s)
end
if not toggle then
local s = [[
libcocos2d.dll+AEDCC:
db 0F 84 68 02 00 00
]]
autoAssemble(s)
end
end

function copyHack(toggle)
if toggle then
local s = [[
GeometryDash.exe+179B8E:
db 90 90
GeometryDash.exe+176F5C:
db 8B CA 90
GeometryDash.exe+176FE5:
db B0 01 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+179B8E:
db 75 0E
GeometryDash.exe+176F5C:
db 0F 44 CA
GeometryDash.exe+176FE5:
db 0F 95 C0
]]
autoAssemble(s)
end
end

function forceVisibility(toggle)
if toggle then
local s = [[
libcocos2d.dll+60753:
db B0 01 90
libcocos2d.dll+60C5A:
db 90 90 90 90 90 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
libcocos2d.dll+60753:
db 8A 45 08
libcocos2d.dll+60C5A:
db 0F 84 CB 00 00 00
]]
autoAssemble(s)
end
end

function instantComplete(toggle)
if toggle then
local s = [[
GeometryDash.exe+20350D:
db C7 81 7C 06 00 00 20 BC BE 4C 90 90 90 90 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+20350D:
db 8B 35 E0 23 2C 00 81 C1 7C 06 00 00 50 FF D6
]]
autoAssemble(s)
end
end

function freeShopItems(toggle)
if toggle then
local s = [[
GeometryDash.exe+F33BB:
db 8B 93 10 01 00 00
GeometryDash.exe+14B339:
db 2B B3 10 01 00 00
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+F33BB:
db 8B 93 14 01 00 00
GeometryDash.exe+14B339:
db 2B B3 14 01 00 00
]]
autoAssemble(s)
end
end

function characterFilter(toggle)
if toggle then
local s = [[
GeometryDash.exe+21A99:
db 90 90
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+21A99:
db 75 04
]]
autoAssemble(s)
end
end

function textLength(toggle)
if toggle then
local s = [[
GeometryDash.exe+21ACB:
db EB 04
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+21ACB:
db 7C 04
]]
autoAssemble(s)
end
end

function songBypass(toggle)
if toggle then
local s = [[
GeometryDash.exe+2CDF44:
db 68 74 74 70 73 3A 2F 2F 61 62 73 6F 6C 6C 6C 75 74 65 2E 63 6F 6D 2F 61 70 69 2F 67 64 5F 73 6F 6E 67 5F 62 79 70 61 73 73 00
]]
autoAssemble(s)
end
if not toggle then
local s = [[
GeometryDash.exe+2CDF44:
db 68 74 74 70 3A 2F 2F 77 77 77 2E 62 6F 6F 6D 6C 69 6E 67 73 2E 63 6F 6D 2F 64 61 74 61 62 61 73 65 2F 67 65 74 47 4A 53 6F 6E 67 49 6E 66 6F 2E 70 68 70 00
]]
autoAssemble(s)
end
end

function Player:Get()
  return getAddress("[[GeometryDash.exe+0x3222D0]+164]")
end

function Player:IsDead()
  return readBool(self:Get()+0x39C)
end

function Player:GetLevelLength()
  return readFloat(self:Get()+0x3B4)
end

function Player:IsPractise()
  return readBool(self:Get()+0x495)
end

function Player:GetCurrentAttempt()
  return readInteger(self:Get()+0x4A8)
end

function Player:Object()
  return PlayerObject:Get()
end

function PlayerObject:Get()
  return getAddress("[Player:Get()+224]")
end

function levelEdit(toggle)
  local s
  if toggle then
    s = [[
GeometryDash.exe+0x1E4A32:
db 90 90
    ]]
  else
    s = [[
GeometryDash.exe+0x1E4A32
db 75 6C
    ]]
  end
  autoAssemble(s)
end
</LuaScript>
</CheatTable>
